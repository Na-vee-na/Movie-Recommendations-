{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 635
        },
        "id": "zFH1gWV1NJRp",
        "outputId": "c03a09eb-ad8e-4b00-86db-eea06c067af5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Enter a movie you like: titanic\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-1-2de114074afc>:48: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(x=top_scores, y=recommended_titles, palette='mako')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "If you liked 'titanic', you might also enjoy: The Notebook\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.metrics.pairwise import linear_kernel\n",
        "\n",
        "# Sample dataset\n",
        "data = {\n",
        "    'title': [\n",
        "        'The Matrix', 'Titanic', 'The Avengers', 'Interstellar',\n",
        "        'The Notebook', 'Inception', 'Toy Story', 'The Dark Knight'\n",
        "    ],\n",
        "    'genres': [\n",
        "        'Action Sci-Fi', 'Romance Drama', 'Action Adventure Sci-Fi', 'Sci-Fi Drama',\n",
        "        'Romance Drama', 'Action Sci-Fi Thriller', 'Animation Comedy Family', 'Action Crime Drama'\n",
        "    ]\n",
        "}\n",
        "\n",
        "# Create DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Vectorize genres using TF-IDF\n",
        "tfidf = TfidfVectorizer(stop_words='english')\n",
        "tfidf_matrix = tfidf.fit_transform(df['genres'])\n",
        "\n",
        "# Compute cosine similarity\n",
        "cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)\n",
        "\n",
        "# Function to recommend one movie and plot top 5 similar ones\n",
        "def recommend_one_movie(title, cosine_sim=cosine_sim):\n",
        "    idx = df[df['title'].str.lower() == title.lower()].index\n",
        "    if idx.empty:\n",
        "        return f\"Movie '{title}' not found in the dataset.\"\n",
        "\n",
        "    idx = idx[0]\n",
        "    sim_scores = list(enumerate(cosine_sim[idx]))\n",
        "    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n",
        "\n",
        "    # Get top 5 (excluding the input movie itself)\n",
        "    top_similar = sim_scores[1:6]\n",
        "    top_indices = [i[0] for i in top_similar]\n",
        "    top_scores = [i[1] for i in top_similar]\n",
        "    recommended_titles = df['title'].iloc[top_indices]\n",
        "\n",
        "    # Plotting\n",
        "    sns.set(style=\"whitegrid\")\n",
        "    plt.figure(figsize=(8, 5))\n",
        "    sns.barplot(x=top_scores, y=recommended_titles, palette='mako')\n",
        "    plt.xlabel(\"Similarity Score\")\n",
        "    plt.title(f\"Top 5 Movies Similar to '{title}'\")\n",
        "    plt.show()\n",
        "\n",
        "    return df['title'].iloc[top_similar[0][0]]\n",
        "\n",
        "# Example usage\n",
        "user_input = input(\"Enter a movie you like: \")\n",
        "result = recommend_one_movie(user_input)\n",
        "print(f\"\\nIf you liked '{user_input}', you might also enjoy: {result}\")"
      ]
    }
  ]
}